
#include<bits/stdc++.h>
using namespace std;

double getmedian(int arr[],int n)
{
    if(n%2 == 0)
        return 1.0*(arr[n/2]+ arr[(n/2)-1])/2;
    else
        return 1.0*(arr[n/2]);
}

double median(int arr1[],int arr2[],int n)
{
    double m1,m2;
    if(n<=0)
        return -1.00;
    if(n==1)
        return 1.0*((arr1[0]+arr2[0])/2);
    if(n==2)
    {
        return 1.0*(max(arr1[0],arr2[0])+ min(arr1[1],arr2[1]))/2;
    }

    m1 = getmedian(arr1,n);
    m2 = getmedian(arr2,n);
    if(m1 == m2)
        return m1;
    if(m1<m2)
    {
        if(n%2 == 0)
            return median(arr1 + n/2 - 1,arr2, n-n/2 + 1);
        else
            return median(arr1 + n/2 ,arr2,n-n/2);
    }
    if(m2<m1)
    {
        if(n%2 == 0)
            return median(arr1,arr2 + n/2 - 1, n-n/2 + 1);
        else
            return median(arr1,arr2 + n/2,n-n/2);
    }
}
int main()
{
    int n,i;
    cout<<"Enter no of elements"<<endl;
    cin>>n;
    int arr1[n],arr2[n];
    cout<<"Enter elements in array 1 (size n) "<<endl;
    for(i=0;i<n;i++)
        cin>>arr1[i];
    cout<<"Enter elements in array 2 (size n) "<<endl;
    for(i=0;i<n;i++)
        cin>>arr2[i];
    cout<<"Median of combined sorted array is "<<endl;
    double med = median(arr1,arr2,n);
    cout<<med<<endl;
    return 0;
}
